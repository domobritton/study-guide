* Flash Card Question/Answer 

Q: **How do we define a graph mathematically?**
A: G = (V, E) where 'V' is a set of vertices or nodes together with a set of 'E' edges, arcs, or lines.

Q: What is the difference between directed, undirected, weighted, and unweighted?
A: Directed graph is a graph that is a set of vertices connected by edges, where the edges have a direction associated with them.

Undirected graph has edges with no orientation.

Q: Give an example of a weighted graph
A:

Q: Give a high level overview of what an objects prototype represents
A: Nearly all objects in JS are instances of Object. A typical object inherits properties (including methods) from Object.prototype.

Q: What are differences between __proto__ and prototype attributes?
A: prototype is not available on the instances themselves (or other objects), but only on the constructor functions. prototype is only available on functions since they are copied from Function and Object, but in anything else it is not. However,__proto__ is available everywhere.

Q: What is an objects default prototype?
A: An object has a prototype property that is empty by default. We can attach properties and methods on this prototype property when we want to implement inheritence.

Q: What happens when we do or don't explicitly set an object's prototype?
A: ???

Q: Name 5 benefits of HTML5
A: 
1) Mutuality for embedding video, audio, charts, animation and more...
2) Cleaner markup by removing divs and replacing with semantic HTML5 elements
3) Elegant forms for reduced need for javascript
4) Offline Application cache for the dev to specify files that the browser should cache, for pages that will reload correctly offline/refresh
5) Geolocation support is directly available to any HTML5-compatible browser

Q: What is localStorage? How might we use it?
A: Allows us to access a Storage object for the Documents origin; stored data is saved across browser sessions. Its useful to store application data in the browser for later usage.

Q: Why are media queries useful?
A: They are useful to implement responsive design; that resizes content dynamically to fit many different devices/browsers

Q: What is mobile-first design?
A: The mobile-first approachis designing for the smallest screen and working your way up. It is one of the best strategies to create responsive or adaptive design

Q: What is a Javascript closure?
A: It is an inner function that has access to the outer enclosing functions variables/scope chain. There are 3 scope chains that it has access to. 1. Its own. 2. The outer functions variables. 3. The global variables.

Q: What are the benefits of a JS closure?
A: It allows you to bind a variable to an execution context and isolate it from being accessed from the outside.

Q: What is data encapsulation?
A: In JS function variables can be hidden from any code outside its definition throught the use of closures.

Q: What happens when you type www.google.com and hit enter?
A: 
1) The browser checks the cache for a DNS record to find the corresponding IP address.
2) If the URL is not in the cache, ISP's DNS server initiates a DNS query to find the IP address of the server that hosts the URL
3) Browser initiates a TCP connection with the server 
4) Browser sends an HTTP request to the server
5) The server handles the request and sends back a response
7) The server sends out an HTTP response
8) The browser displays HTML content for the response

Q: What is the difference between the memory heap and call stack in JS?
A: Variables in JS are stored in both places. A stack is usually a continuous region of memory allocating local contect for each executing function. A heap is a much larger region storing everything allocated dynamically.

Q: What is one problem with programming languages that are fully single-threaded?
A: It will only allow for one task to be done at a time synchronously. Having multiple threads may not speed up execution of code, but can split work up to allow the computer to process several tasks asynchronously.

Q: Is JS a single-threaded language?
A: Though it is technically true that it is a single-threaded language, unlike other scripting languages, JS was created to interact with browsers and utilizes web workers to execute code asynchronously.

Q: In which order do the React Lifecycle methods (including the optional ones) run?
A: Initialization => Mounting => Updating => Unmounting

Q: In which lifecycle methods should you make asynchronous fetches for data?
A: componentDidUpdate, componentDidMount

Q: What is the difference between composition and inheritance in JS functional programming?
A: They are design choices. Inheritance is building based upon what an object is, Composition is building based upon what an object does.

Q: Which React Life Cycle methods can call this.setState()?
A: componentWillMount(), componentDidMount(), componentDidUpdate(), componentWillReceiveProps()

Q: Describe an implementation of Dijkstra's shortest-path algorithm.
A: From starting point on graph choose the shortest path from each next node while also not doubling back on a node already traversed.

Q: Assuming RESTful routes, a GET request to `/magazines/:magazine_id/articles` would do what?
A: Call the index action of the ArticlesController with magazine_id as a key in the params hash

Q: What algorithm is best suited for a social network that suggests friends to a user?
A: A Breadth First Search Graph

Q: What occurs with an <input type='text' required>?
A: 'Required' attribute will check if the text field is empty in client-side when the form is submitted. Submit button can be clicked when the form is submitted.

Q: The React component method, this.setState(), ______
A: Enqueus a request to update the state and re-render the component, which may be delayed and batched with other requests.

Q: To implement Dijkstras shortest path algorithm on unweighted graphs so that is runs in linear time, the data structure to be used is?
A: Queue

Q: The uniform interface constraint ensures that there is a common language buetween servers and clients, that alllow each part to be swapped out or modified without breaking the entire system.
This is acheived through 4 sub-constraints. Which are they?
A: 
1) Identification of resources
2) Caching
3) Layered systems
4) manipulation of resources through representations

Q: What are some features of REST?
A: 
1) Language independent
2) Can be used even if firewalls exist
3) Can be used on top of HTTPS
4) Requests and responses are lightweight

Q: Why would a developer choose to use an IIFE?
A: When they wanted to control what was added to the global namespace

Q: Depth First Search Graph. What is the tightest upper bound on the run time of DFS?
A: O(n2)

Q: Make is a utility that automatically builds executable programs and libraries from source code by reading files called makefiles which speciy how to redive the target program.
What is the algorithm used by Make?
A: Topological Sorting

Q: In an undirected, unweighted connected graph, what algorithm has the fastest time complexity?
A: A BFS search

Q: What is a prototype in JS?
A: An object

Q: When creating an object in JS, is it better practice to define methods on the prototype or within the constructor?
A: Prototype. The methods will be defined in one place and won't be duplicated across instances, saving memory.

Q: TCP/IP is organized into four abstraction layers. What are they from highest to lowest?
A: Application > Transport > Internet > Link

Q: What are key differences between TCP and UDP?
A: 
1) UDP does not have a handshaking protocol, TCP does.
2) UDP has smaller packet sizes (UDP header: 8 bytes, TCP header: 20 bytes), no connection required, and more controll over when data is sent.
3) USP is used by apps to deliver a faster stream of info by doing away with error checking, UDP packets can arrive out of order, or corrupted.
4) TCP has congestion control and error detection (mandatory checksum)

Q: What does it mean when we say JS's event loop is non-blocking?
A: The program can continue executing instructions before an operation in the event loop has finished.


